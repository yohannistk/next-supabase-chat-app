generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  clerkId       String @unique
  email         String @unique
  userName  String
  imageUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sentMessages    Message[] @relation("SentMessages")
  user1Conversations Conversation[] @relation("User1Conversations")
  user2Conversations Conversation[] @relation("User2Conversations")
  @@map("users")
  @@index([clerkId])
}
 

model Conversation {
  id        String       @id @default(cuid())
  user1Id   String
  user1     User      @relation("User1Conversations", fields: [user1Id], references: [id])
  user2Id   String
  user2     User      @relation("User2Conversations", fields: [user2Id], references: [id])
  createdAt DateTime  @default(now())
  messages Message[]  @relation("MessageList")
  lastMessage           Message?     @relation("LastMessage",fields: [lastMessageId], references: [id])
  lastMessageId         String? @unique
  updatedAt DateTime @updatedAt
  @@unique([user1Id, user2Id])
}


 model Message {
  id             String       @id @default(cuid())
  conversation   Conversation  @relation("MessageList",fields: [conversationId], references: [id])
  conversationId String 
  lastforConversation Conversation? @relation("LastMessage")
  sender         User      @relation("SentMessages", fields: [senderId], references: [id])
  senderId       String
  content        String
  createdAt      DateTime  @default(now())
}